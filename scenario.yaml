appInstallations:
  postgresql:
    appName: PostgreSQL
    appVersion: 0.1.0
    id: 019a0c38-e6b7-7e50-bc0a-623717938d42
blocks:
  - name: Create Test Table
    description: Creates the test table with id, number_field, bool_field, jsonb_field, and text_field columns
    type:
      appBlock:
        block: executeCommand
        appInstallation: postgresql
        schema: '{"order":1,"name":"Execute Command","category":"Basic","description":"Executes INSERT, UPDATE, DELETE, or DDL commands (use Execute Query for RETURNING clauses)","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"command":{"order":0,"name":"SQL Command","description":"SQL command to execute with optional parameter placeholders ($1, $2, etc.)","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"parameters":{"order":1,"name":"Parameters","description":"Array of parameter values for the command","type":{"items":{},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Command Result","description":"The result of the SQL command execution","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"rowsAffected":{"description":"Number of rows affected by the command","type":"number"}},"required":["rowsAffected"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 305]
    inputs:
      default:
        config:
          command: !expr '''CREATE TABLE IF NOT EXISTS test (id SERIAL PRIMARY KEY, number_field INTEGER, bool_field BOOLEAN, jsonb_field JSONB, text_field TEXT)'''
  - name: Insert Single Row
    description: Inserts one row into the test table
    type:
      appBlock:
        block: executeCommand
        appInstallation: postgresql
        schema: '{"order":1,"name":"Execute Command","category":"Basic","description":"Executes INSERT, UPDATE, DELETE, or DDL commands (use Execute Query for RETURNING clauses)","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"command":{"order":0,"name":"SQL Command","description":"SQL command to execute with optional parameter placeholders ($1, $2, etc.)","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"parameters":{"order":1,"name":"Parameters","description":"Array of parameter values for the command","type":{"items":{},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Command Result","description":"The result of the SQL command execution","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"rowsAffected":{"description":"Number of rows affected by the command","type":"number"}},"required":["rowsAffected"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 455]
    inputs:
      default:
        links:
          - block: Create Test Table
            output: default
        config:
          command: !expr '''INSERT INTO test (number_field, bool_field, jsonb_field, text_field) VALUES ($1, $2, $3, $4)'''
          parameters: !expr '[42, true, {key: ''value'', nested: {number: 123}}, ''Hello World'']'
  - name: Bulk Insert Rows
    description: Bulk inserts multiple rows into the test table
    type:
      appBlock:
        block: bulkInsert
        appInstallation: postgresql
        schema: '{"order":2,"name":"Bulk Insert","category":"Bulk Operations","description":"Efficiently inserts multiple rows using PostgreSQL''s COPY protocol","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"columns":{"order":1,"name":"Column Names","description":"Array of column names to insert into","type":{"items":{"type":"string"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"rows":{"order":2,"name":"Rows Data","description":"Array of row data arrays (each inner array must match columns order)","type":{"items":{"items":{},"type":"array"},"type":"array"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"table":{"order":0,"name":"Table Name","description":"Target table name (optionally with schema, e.g., ''public.users'')","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Insert Result","description":"The result of the bulk insert operation","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"rowCount":{"description":"Number of rows inserted","type":"number"},"table":{"description":"The table name where rows were inserted","type":"string"}},"required":["rowCount","table"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 605]
    inputs:
      default:
        links:
          - block: Insert Single Row
            output: default
        config:
          columns: !expr '[''id'', ''number_field'', ''bool_field'', ''jsonb_field'', ''text_field'']'
          rows: !expr '[[2, 100, false, {type: ''test'', data: [1,2,3]}, ''Second row''], [3, 200, true, {active: true, settings: {theme: ''dark''}}, ''Third row''], [4, 300, false, {empty: null}, ''Fourth row'']]'
          table: !expr '''test'''
  - name: Query Table
    description: Queries all rows from the test table
    type:
      appBlock:
        block: executeQuery
        appInstallation: postgresql
        schema: '{"order":0,"name":"Execute Query","category":"Basic","description":"Executes a SELECT query and returns the results","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"parameters":{"order":1,"name":"Parameters","description":"Array of parameter values for the query","type":{"items":{},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"query":{"order":0,"name":"SQL Query","description":"SQL SELECT query with optional parameter placeholders ($1, $2, etc.)","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Query Result","description":"The result of the SELECT query","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"rows":{"description":"Array of result rows","items":{"type":"object"},"type":"array"}},"required":["rows"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 756]
    inputs:
      default:
        links:
          - block: Bulk Insert Rows
            output: default
        config:
          query: !expr '''SELECT * FROM test ORDER BY id'''
  - name: Drop Table
    description: Drops the test table after queries complete
    type:
      appBlock:
        block: executeCommand
        appInstallation: postgresql
        schema: '{"order":1,"name":"Execute Command","category":"Basic","description":"Executes INSERT, UPDATE, DELETE, or DDL commands (use Execute Query for RETURNING clauses)","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"command":{"order":0,"name":"SQL Command","description":"SQL command to execute with optional parameter placeholders ($1, $2, etc.)","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"parameters":{"order":1,"name":"Parameters","description":"Array of parameter values for the command","type":{"items":{},"type":"array"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Command Result","description":"The result of the SQL command execution","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"rowsAffected":{"description":"Number of rows affected by the command","type":"number"}},"required":["rowsAffected"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 1023]
    inputs:
      default:
        links:
          - block: Get Table Info
            output: default
        config:
          command: !expr '''DROP TABLE test'''
  - name: Get Table Info
    description: Gets table information for the test table
    type:
      appBlock:
        block: getTableInfo
        appInstallation: postgresql
        schema: '{"order":5,"name":"Get Table Info","category":"Utility","description":"Retrieves schema information about tables and columns","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"schema":{"order":0,"name":"Schema Name","description":"Database schema name","type":{"type":"string"},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false},"table":{"order":1,"name":"Table Name","description":"Table name to get information about","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Table Information","description":"Complete schema information about the table","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"columns":{"description":"Array of column definitions","items":{"properties":{"comment":{"description":"Column comment/description","type":"string"},"dataType":{"description":"PostgreSQL data type","type":"string"},"defaultValue":{"description":"Default value expression","type":"string"},"maxLength":{"description":"Maximum character length (for string types)","type":"number"},"name":{"description":"Column name","type":"string"},"nullable":{"description":"Whether the column allows NULL values","type":"boolean"},"numericPrecision":{"description":"Numeric precision (for numeric types)","type":"number"},"numericScale":{"description":"Numeric scale (for numeric types)","type":"number"}},"type":"object"},"type":"array"},"constraints":{"description":"Array of table constraints","items":{"properties":{"columns":{"description":"Columns involved in the constraint","type":"string"},"foreignColumns":{"description":"Referenced columns (for foreign keys)","type":"string"},"foreignTableName":{"description":"Referenced table name (for foreign keys)","type":"string"},"foreignTableSchema":{"description":"Referenced table schema (for foreign keys)","type":"string"},"name":{"description":"Constraint name","type":"string"},"type":{"description":"Constraint type (PRIMARY KEY, FOREIGN KEY, UNIQUE, CHECK)","type":"string"}},"type":"object"},"type":"array"},"indexes":{"description":"Array of table indexes","items":{"properties":{"columns":{"description":"Columns included in the index","type":"string"},"isPrimary":{"description":"Whether this is the primary key index","type":"boolean"},"isUnique":{"description":"Whether the index enforces uniqueness","type":"boolean"},"name":{"description":"Index name","type":"string"}},"type":"object"},"type":"array"},"schema":{"description":"Schema name","type":"string"},"tableComment":{"description":"Table comment/description","type":"string"},"tableName":{"description":"Table name","type":"string"},"tableType":{"description":"Table type (BASE TABLE, VIEW, etc.)","type":"string"}},"required":["schema","tableName","tableType","columns","constraints","indexes"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1163, 887]
    inputs:
      default:
        links:
          - block: Query Table
            output: default
        config:
          table: test
  - name: Send Notification
    type:
      appBlock:
        block: sendNotification
        appInstallation: postgresql
        schema: '{"order":4,"name":"Send Notification","category":"Listen/Notify","description":"Sends a NOTIFY event to a PostgreSQL channel","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"channel":{"order":0,"name":"Channel Name","description":"PostgreSQL channel name to send notification to","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"payload":{"order":1,"name":"Payload","description":"Notification payload (max 8000 bytes). Objects will be JSON stringified.","type":{},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Notification Sent","description":"Confirmation that the notification was sent","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel the notification was sent to","type":"string"},"payload":{"description":"The payload that was sent"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1465, 455]
    inputs:
      default:
        config:
          channel: test-channel
          payload: hello
  - name: Send Notification (1)
    type:
      appBlock:
        block: sendNotification
        appInstallation: postgresql
        schema: '{"order":4,"name":"Send Notification","category":"Listen/Notify","description":"Sends a NOTIFY event to a PostgreSQL channel","config":{},"hasOnInternalMessage":false,"inputs":{"default":{"order":0,"config":{"channel":{"order":0,"name":"Channel Name","description":"PostgreSQL channel name to send notification to","type":{"type":"string"},"fixed":false,"required":true,"hasValidator":false,"fieldKey":"","sensitive":false},"payload":{"order":1,"name":"Payload","description":"Notification payload (max 8000 bytes). Objects will be JSON stringified.","type":{},"fixed":false,"required":false,"hasValidator":false,"fieldKey":"","sensitive":false}},"hasOnEvent":true}},"outputs":{"default":{"order":0,"name":"Notification Sent","description":"Confirmation that the notification was sent","default":true,"possiblePrimaryParents":["default"],"type":{"properties":{"channel":{"description":"The channel the notification was sent to","type":"string"},"payload":{"description":"The payload that was sent"}},"required":["channel"],"type":"object"}}},"signals":{},"hasOnSync":false,"hasOnDrain":false,"hasOnTimer":false}'
        # The above schema can be used if you attempt to create this block without a valid app installation referenced.
    position: [1465, 598]
    inputs:
      default:
        links:
          - block: Send Notification
            output: default
        config:
          channel: test-channel
          payload: !expr "{\n  hello: \"world\"  \n}"
